name: Release

on:
  release:
    types: [released]

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build:
    name: Build ${{ matrix.arch }} binary
    runs-on: ${{ matrix.runner }}   
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64-unknown-linux-gnu
            os: linux
            runner: ubuntu-latest
            file: linux-x86_64
            build-step: |
              cargo build --release --target x86_64-unknown-linux-gnu
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust with dtolnay/toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.86
          target: ${{ matrix.arch }}

      - name: Install Linux dependencies
        if: matrix.os == 'linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Build
        run: ${{ matrix.build-step }}

      - name: Rename binary
        id: out
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          cp target/${{ matrix.arch }}/release/aerp aerp
          file=$(echo "aerp-$VERSION-${{ matrix.file }}.linux-amd64.tgz")
          echo "file=$file" >> "$GITHUB_OUTPUT"
          tar -zcvf $file aerp
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
  
      - name: Upload to S3
        run: |
          aws s3 cp ${{ steps.out.outputs.file }} s3://download.auditplus.io/${{ steps.out.outputs.file }}
    